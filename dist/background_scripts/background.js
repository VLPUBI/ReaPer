let currentTab;const portsArr=[];class Tab{constructor(e,s){this.tabTitle=e,this.tabId=s}}const onMessageFromDevTool=e=>{console.log("background.js received a message from the dev tool:",e.message),sendMessageToContentScript(e.message)},sendMessageToDevTool=e=>{0!==portsArr.length?(console.log("background.js sending message to dev tool:",e),portsArr[0].postMessage({message:e})):console.log("background.js: no ports to send message to!")},handleMessageFromContentScript=(e,s,o)=>{console.log("background.js received message:",e.message);const t=s.tab.title,n=s.tab.id;setTab(t,n)},sendMessageToContentScript=e=>{void 0!==currentTab?(console.log("background.js sending message to content.js:",e),chrome.tabs.sendMessage(currentTab.tabId,e)):console.log("background.js: no tab to send message to")},setTab=(e,s)=>{void 0!==currentTab&&console.log("background.js: Existing tab data being overwritten: tabTitle=",currentTab.tabTitle,"tabId=",currentTab.tabId),console.log("background.js: new tab data, tabTitle=",e,"tabId=",s),currentTab=new Tab(e,s)};chrome.runtime.onConnect.addListener((e=>{portsArr.push(e),e.onMessage.addListener(onMessageFromDevTool)})),chrome.runtime.onMessage.addListener(handleMessageFromContentScript);